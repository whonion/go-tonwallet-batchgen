name: Publish Release V1

on:
  push:
    branches:
      - main
    tags:
      - 'v1.0.0.0'

jobs:
  build:
    runs-on: [ubuntu-latest, windows-latest]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.4
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      
      - name: Install dependencies
        run: go get .

      - name: Build for ${{ matrix.os }}
        run: make build

      - name: Test with the Go CLI
        run: go test main.go

  release:
    runs-on: [ubuntu-latest, windows-latest]
    needs: build
    if: github.event_name == 'push' && github.ref_type == 'tag'

    steps:
      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Upload Release Asset Linux
        if: runner.os == 'Linux'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./myapp-linux
          asset_name: myapp-linux
          asset_content_type: application/octet-stream

      - name: Upload Release Asset Windows
        if: runner.os == 'Windows'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./myapp-windows.exe
          asset_name: myapp-windows.exe
          asset_content_type: application/octet-stream

      - name: Publish Release
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}